# This is a basic workflow to help you get started with Actions

name: Unit Test & Build Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

env:
  PYTHON_VERSION: "3.10"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobs "linting" and "test"
  linting:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/cache_poetry_installation
      - name: Install Dependencies
        run: poetry install --with dev
      - name: Run mypy check
        run: make mypy
      - name: Run bandit check
        run: make bandit
  test:
    needs: linting
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.venv
          installer-parallel: true
      - name: Install dependencies
        run: poetry install --with test
      - name: Test with pytest
        run: make test
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/cache_poetry_installation
      - name: Install twine
        run: pip install twine
      - name: Build and check package with twine
        run: |
          make build
          poetry run twine check dist/*.whl